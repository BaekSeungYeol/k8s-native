stages:
  - build
  - deploy
 
variables:
  IMAGE_NAME: $REGISTRY_HOST_URL/$CI_PROJECT_PATH
  BUILD_IMAGE_VERSION: "1.14"


# ======================= build ============================ #
 
.build-template:
  stage: build
  image:
    name: $KANIKO_IMAGE:v1.3.0
    entrypoint: [ "" ]
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR
      --build-arg VERSION=$BUILD_IMAGE_VERSION
      --cache=true
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $IMAGE_NAME:$IMAGE_TAG
 

build-staging:
  extends:
    - .build-template
  before_script:
    - if [ -z $IMAGE_TAG ]; then export IMAGE_TAG=${CI_COMMIT_SHORT_SHA}-stg; fi
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^release-.*$/


build-production:
  extends:
    - .build-template
  before_script:
    - if [ -z $IMAGE_TAG ]; then export IMAGE_TAG=$CI_COMMIT_TAG; fi
  rules:
    - if: $CI_COMMIT_TAG
 
# ======================= deploy ============================ #
.deploy-template:
  stage: deploy
  image:
    name: $KUBECTL_IMAGE:v1.0.0
    entrypoint: [ "" ]
  script:
    - cd $KUSTOMIZATION_PATH
    - kustomize edit set image $CI_PROJECT_NAME=$IMAGE_NAME:$IMAGE_TAG
    - kustomize build . | kubectl apply -f -
 
# 검증계 배포를 수행한다.
# rule: release-로 시작하는 branch에서 동작한다.
deploy.k8s-staging.devops:
  extends:
    - .deploy-template
  environment:
    name: staging
  variables:
    KUSTOMIZATION_PATH: $CI_PROJECT_DIR/kubernetes-manifests/overlays/staging
    KUBERNETES_CONTEXT: k8s-staging
    KUBERNETES_NAMESPACE: devops
  before_script:
    - kubectl initconfig
    - if [ -z $IMAGE_TAG ]; then export IMAGE_TAG=${CI_COMMIT_SHORT_SHA}-stg; fi
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^release-.*$/
      when: manual
 
# 운영계 배포를 수행한다.
# rule: tag가 생성되었을 때 동작한다.
#            master branch에서 IMAGE_TAG 변수 값을 주면 동작한다.
deploy.k8s-production.devops:
  extends:
    - .deploy-template
  environment:
    name: production
  variables:
    KUSTOMIZATION_PATH: $CI_PROJECT_DIR/kubernetes-manifests/overlays/production
    KUBERNETES_CONTEXT: k8s-staging
    KUBERNETES_NAMESPACE: devops
  before_script:
    - kubectl initconfig
    - if [ -z $IMAGE_TAG ]; then export IMAGE_TAG=$CI_COMMIT_TAG; fi
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && $IMAGE_TAG
    - if: $CI_COMMIT_TAG
      when: manual
