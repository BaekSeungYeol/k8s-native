apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-native
spec:
  selector:
    matchLabels:
      app: k8s-native
  replicas: 3
  template:
    metadata:
      labels:
        app: k8s-native
    spec:
      volumes:
        - name: k8s-configmap-volume
          configMap:
            name: k8s-configmap
        - name: db-password
          secret:
            secretName: db-password
      containers:
        - name: k8s-native
          image: k8s-native
          volumeMounts:
            - mountPath: /etc/config
              name: k8s-configmap-volume
            - mountPath: /etc/db
              name: db-password
              readOnly: true
          envFrom:
            - secretRef:
                name: db-password
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
            initialDelaySeconds: 10
            periodSeconds: 3
            failureThreshold: 2
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
            initialDelaySeconds: 10
            periodSeconds: 3
      restartPolicy: Always
      imagePullSecrets:
        - name: test

---
apiVersion: v1
kind: Service
metadata:
  name:  k8s-native
spec:
  selector:
    app:  k8s-native
  type:  ClusterIP
  ports:
    - port: 8080
      targetPort: 8080

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-configmap
data:
  application.properties: |
    my.message: hello kubernetes

---

